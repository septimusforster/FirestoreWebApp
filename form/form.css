/*
body {
    background-image: url("image2.jpg");
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-size: cover;
    height: 100vh;
    display: grid;
    place-items: center;
}


#container {
    background-color: rgba(223, 126, 15, 0.164);
    width: clamp(300px, 40%, 500px);
    display: flex;
    align-items: center;
    flex-direction: column;
    height: fit-content;
    border: 1px solid rgba(240, 161, 43, 0.35);
    border-radius: 4px;
    padding: 10px;
   
}
#image {
    background-image: url("image1.jpg");
    background-size: cover;
    background-repeat: no-repeat;
    width: auto;
    height: auto;
    text-align: center;
    color: white;
    font-size: 1.2rem;
    font-weight: bolder;
    padding: 20px;
    border-radius: 10px;
}

.line {
    background-color: white;
    border-radius: 8px;
    padding-bottom: 20px;
}

p {
    font-weight: lighter;
}

 label, input, #grade, #exp {
    display: block;
 }

 input, #grade, #exp {
    border: 1px solid rgba(240, 161, 43, 0.4);;
    border-radius: 6px;
    width: clamp(220px, 100%, 400px);
    padding: 12px 5px;
    font-size: 1rem;
    color: #331;
    box-sizing: border-box;
 }
 label{
    margin: 20px 0 2px;
    font-weight: bold;
    color: rgba(128, 128, 128, 0.9);

 }

 button {
    margin-left: 50%;
    transform: translate(-50%);
    color: white;
    font-size: 1.2rem;
    font-weight: bold;
    width: 100px;
    padding: 7px;
    background-color: rgb(209, 151, 44);
    margin-top: 10px;
    border-radius: 6px;
    border: none;
 }

 span {
    color: rgb(248, 110, 110);
    font-size: .8rem;
 }
*/
* {margin: 0;padding: 0;box-sizing: border-box;font-family: system-ui;color: #1c274c;}
body, button.sbmt.fin::after {
    background-repeat: no-repeat;
    background-position: center;
}
button {
    border: 0;
    outline: none;
    cursor: pointer;
    background: none;
}
button > * {
    pointer-events: none;
}
body {
    height: 100vh;
    width: 100vw;
    background-image: url('image2.jpg');
    background-size: cover;
    font-size: 14px;
}
#container {
    height: 100%;
    width: 100%;
    background-color: rgba(0,0,0,.7);
    /* background-color: #1c274c88; */
    display: flex;
    align-items: center;
    justify-content: center;
}
form {
    border-radius: 8px;
    max-height: 70%;
    width: clamp(220px, 25%, 760px);
    background-color: #f3f3f3;
    box-shadow: 0 0 24px #1117;
    display: grid;
    grid-template-rows: 17% minmax(300px, 400px);
    background-image: url('image1.jpg');
    background-position: center 25%;
    background-size: cover;
    border: 5px solid #0005;
    outline: 5px solid #fff;
    position: relative;
    overflow: hidden;
}
form::before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    background: linear-gradient(to left, transparent, #f7f7f7 50%);
}
form > * {
    position: relative;
}
header {
    background: linear-gradient(to left, transparent, #f7f7f7 50%);
}
header > div {
    padding: 8px 24px 0;
}
header > div:nth-of-type(1) {
    font-weight: 500;
}
header > div:nth-of-type(2) {
    font-weight: 400;
    font-size: .8em;
}
.body::-webkit-scrollbar {
    width: 7px;
}
.body::-webkit-scrollbar-thumb {
    background-color: #1c274c;
    background-color: #fff;
    border-radius: 24px;
}
.body {
    padding: 0 20px;
    overflow-y: scroll;
}
input:not(input[type='checkbox'], input[type='file']), select, button.sbmt {
    padding: 8px 20px;
    border-radius: 20px;
    box-shadow: 0 0 7px #1c274c88;
}
input:not(input[type='checkbox'], input[type='file']), select, label, textarea {
    width: 70%;
}
input:not(input[type='checkbox'], input[type='file']), select {
    display: block;
    outline: none;
    border: 0;
    margin: 20px 0;
}
label:not(label[for='uploadpop']), textarea {
    font-size: .8em;
}
label {
    padding: 3px 8px;
    margin: 8px 0;
    display: flex;
    align-items: center;
    gap: .5em;
}
label > input {
    width: 1em;
    aspect-ratio: 1;
    border: 1px solid;
}
textarea {
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 8px 16px;
    outline: none;
    resize: none;
}
footer {
    padding: 0 20px;
    position: sticky;
    top: 100%;
    background: linear-gradient(to left, transparent, #f7f7f7 50%);
}
#pop ~ div {
    font-size: .8em;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    flex-wrap: wrap;
    gap: .5em;
    padding: 8px 16px;
}
#pop ~ div:last-of-type {
    flex-wrap: nowrap;
}
#pop + div > small,
label[for='uploadpop'] {
    flex-basis: 40%;
}
label[for='uploadpop']:hover {
    background-color: #1c274c11;
}
#pop + div > strong,
label[for='uploadpop'] ~ output {
    flex-basis: 50%;
}
label[for='uploadpop'] {
    border: 1px solid #1c274c88;
    cursor: pointer;
    display: inline-block;
    text-align: center;
    padding: 8px 16px;
    width: 50%;
    border-radius: 24px;
}
input[type='file'] {
    width: 0;
}
label[for='uploadpop'] ~ output {
    text-wrap: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}
input[readonly], input[disabled]:not(button),
select[readonly], select[disabled]:not(button),
textarea[readonly] {
    box-shadow: none;
    background: transparent;
    margin: 0;
    border: 0;
    appearance: none;
}
input[type='checkbox'][disabled] {
    appearance: auto;
}
label:has(input[disabled]) > span {
    color: #888;
}
button.sbmt {
    width: 50%;
    margin: 30px 0;
    background-color: #1c274c;
    position: relative;
}
button.sbmt::before, button.sbmt::after {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}
button.sbmt::before {
    height: 15px;
    width: 15px;
    border-radius: 50%;
    border: 3px solid;
    border-color: #fff #fff transparent transparent;
    animation-iteration-count: infinite;
    animation-duration: 2s;
    animation-timing-function: linear;
    animation-fill-mode: backwards;
}
button.sbmt.fin::after {
    height: 28px;
    width: 28px;
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.9647 14.9617L17.4693 7.44735L18.5307 8.50732L9.96538 17.0837L5.46967 12.588L6.53033 11.5273L9.9647 14.9617Z" fill="%23FFF"/></svg>');
}
button.sbmt.fin {
    background-color: #009578;
    pointer-events: none;
}
button.sbmt > div {
    color: #f3f3f3;
    position: relative;
    overflow: hidden;
}
button.sbmt > div::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    transform: translateY(120%) rotate(15deg);
    height: 100%;
    width: 100%;
    background-color: #1c274c;
    transition: transform .5s;
    z-index: 1;
}
button.sbmt:hover > div::before {
    transform: translateY(-120%) rotate(15deg);
}
button.sbmt.clk > div,
button.sbmt.fin > div {
    opacity: 0;
}
button.sbmt.clk::before {
    content: '';
    animation-name: spinner;
}
button.sbmt.fin::after {
    content: '';
}
@keyframes spinner {
    100% {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}
#expectations, #pop {
    /* font-size: .8em; */
    padding: 14px 16px 0;
}
.notice {
    position: fixed;
    bottom: -11%;
    left: 5%;
    padding: 20px;
    background-color: #ff450088;
    color: #fff;
    transition: bottom .3s;
}
.notice.on {
    bottom: 5%;
}
.notice::before {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    bottom: -12px;
    left: -12px;
    border: 12px solid;
    border-color: transparent #ff450088 transparent transparent;
    transform: rotate(45deg);
}
@media screen and (max-width: 768px) {
    form {
        width: clamp(220px, 90%, 960px);
    }
    #pop ~ div:last-of-type {
        flex-wrap: wrap;
    }
    label[for='uploadpop'], label[for='uploadpop'] ~ output {
        flex-basis: auto;
    }
}